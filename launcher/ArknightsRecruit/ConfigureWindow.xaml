<?xml version="1.0" encoding="utf-8"?>
<Window
    x:Class="launcher.ArknightsRecruit.ConfigureWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:launcher"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Title="Arknights recruitment configuration">

    <Grid RowDefinitions="*, Auto" Background="{StaticResource MainBackground}">
        <StackPanel Grid.Row="0" Orientation="Horizontal" Spacing="15" HorizontalAlignment="Center">
            <StackPanel Spacing="10" Background="{StaticResource WhiteBackgroundMain}" VerticalAlignment="Top" Padding="10" RequestedTheme="Light">
                <TextBox x:Name="TitleTextBox" Header="Title of the emulator window (case insensitive)" PlaceholderText="Bluestacks, LDPlayer, ..."/>
                <ToggleSwitch x:Name="AskBeforeActingToggle" OnContent="Ask before acting" OffContent="Ask before acting" Style="{StaticResource ToggleSwitchMainStyle}"/>
                <ToggleSwitch x:Name="RefreshToggle" OnContent="Do refresh" OffContent="Do refresh" Style="{StaticResource ToggleSwitchMainStyle}"/>
                <ToggleSwitch x:Name="RecruitToggle" OnContent="Do recruit" OffContent="Do recruit" Style="{StaticResource ToggleSwitchMainStyle}"/>
                <ToggleSwitch x:Name="ExpediteToggle" OnContent="Do expedite" OffContent="Do expedite" Style="{StaticResource ToggleSwitchMainStyle}"/>
                <ToggleSwitch x:Name="HireToggle" OnContent="Do hire" OffContent="Do hire" Style="{StaticResource ToggleSwitchMainStyle}"/>
            </StackPanel>

            <!-- This behavior should be achievable more easily, something like <StackPanel Overflow="false"> should behave like this grid -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal" Spacing="10" Padding="10, 0, 0, 10" Background="{StaticResource WhiteForeground}" RequestedTheme="Light">
                    <TextBlock Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left">Priority rules</TextBlock>
                    <Button Grid.Row="0" Grid.Column="2" HorizontalAlignment="Center" Padding="2" Margin="0" Click="NewRule_Clicked">
                        <Image Width="15" Source="../Assets/add.png" >
                            <ToolTipService.ToolTip>
                                <TextBlock TextWrapping="WrapWholeWords">
                                Adds a new empty priority rule
                                <LineBreak />
                                Incomplete rules will be ignored upon save
                                </TextBlock>
                            </ToolTipService.ToolTip>
                        </Image>
                    </Button>
                    <Image Grid.Row="0" Grid.Column="4" Width="15" HorizontalAlignment="Right" Source="../Assets/help.png">
                        <ToolTipService.ToolTip>
                            <TextBlock TextWrapping="WrapWholeWords">
                            1) The action taken correspond to the first rule to match, from top to bottom.
                            <LineBreak />
                            2) If guaranteed is true, the rule will only match if the tags guarantee to obtain a corresponding operator. Otherwise, the rule will match if obtaining such an operator is simply possible.
                            <LineBreak />
                            3) Rarity rules match any operator whose rarity is greater or equal to the value chosen.
                            <LineBreak />
                            4) Operator rules match the operator with the given name.
                            </TextBlock>
                        </ToolTipService.ToolTip>
                    </Image>
                </StackPanel>

                <Grid Grid.Row="1" ColumnDefinitions="115,150,115,100" Background="{StaticResource WhiteForeground}" RequestedTheme="Light">
                    <TextBlock Grid.Column="0" HorizontalAlignment="Center">Type</TextBlock>
                    <TextBlock Grid.Column="1" HorizontalAlignment="Center">Value</TextBlock>
                    <TextBlock Grid.Column="2" HorizontalAlignment="Center">Action</TextBlock>
                    <TextBlock Grid.Column="3" HorizontalAlignment="Center">Guaranteed</TextBlock>
                </Grid>

                <ListView Grid.Row="2" x:Name="ActionRulesPanel" ItemsSource="{x:Bind priorityRules}" Background="{StaticResource WhiteBackgroundMain}" RequestedTheme="Light">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Padding" Value="0,0,20,0"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Stretch" Margin="0, 0, 15, 10" Spacing="15" FlowDirection="RightToLeft" RequestedTheme="Light">
            <Button Click="Cancel_Click">
                Cancel
                <Button.Resources>
                    <ResourceDictionary>
                        <SolidColorBrush x:Key="ButtonBackground" Color="#FFFFE361"/>
                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#AAFFE361"/>
                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#AAFFE361"/>
                    </ResourceDictionary>
                </Button.Resources>
            </Button>
            <Button Click="Reset_Click">
                Reset
                <Button.Resources>
                    <ResourceDictionary>
                        <SolidColorBrush x:Key="ButtonBackground" Color="#FFFE4B4B"/>
                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#AAFE4B4B"/>
                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#AAFE4B4B"/>
                    </ResourceDictionary>
                </Button.Resources>
            </Button>
            <Button Click="OK_Click">
                OK
                <Button.Resources>
                    <ResourceDictionary>
                        <SolidColorBrush x:Key="ButtonBackground" Color="#FF82CEF9"/>
                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#AA82CEF9"/>
                        <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#AA82CEF9"/>
                    </ResourceDictionary>
                </Button.Resources>
            </Button>
        </StackPanel>
    </Grid>
</Window>
